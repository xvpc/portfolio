import React, {useState, useEffect, useRef} from 'react'

import Projects from '@/components/Projects';

import projectData from '../data/projects.json'
import introductionData from '../data/introduction.json'

// Next
import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link';

// Icons
import { AiFillGithub } from "@react-icons/all-files/ai/AiFillGithub";
import { AiFillLinkedin } from "@react-icons/all-files/ai/AiFillLinkedin";
import { AiOutlineWhatsApp } from "@react-icons/all-files/ai/AiOutlineWhatsApp";
import { FaDiscord } from "@react-icons/all-files/fa/FaDiscord";

import { MdOutlineLightMode } from "react-icons/md";
import { MdOutlineDarkMode } from "react-icons/md";
import { FiArrowDown } from "react-icons/fi";

// Liab
import Placeholder from 'react-bootstrap/Placeholder';

import Ripples from 'react-ripples'

import { Swiper, SwiperSlide } from 'swiper/react';
import { EffectCards } from 'swiper';

import 'swiper/css';
import "swiper/css/effect-cards";

export default function Home() {
  const introductionRefs = useRef()
  const projectsRefs = useRef()
  const footerRefs = useRef()

  const [loaded, setLoaded] = useState(false)
  useEffect(() => {
    setLoaded(true)
  }, [])

  // Light Mode
  const [mode, setMode] = useState('dark')
  const handleMode = () => {
    if(mode === 'light'){
      setMode('dark')
    }else{
      setMode('light')
    }
  }

  // const [scrolled, setScrolled] = useState('')
  useEffect(() => {
    const projectContainer = document.querySelectorAll('.project-container')
    const introductionName = document.querySelector('.introduction-name')
    const introductionDescription = document.querySelector('.introduction-description')
    const introductionSwiper = document.querySelector('.introduction-swiper')

    const handleScroll = () => {
      if(typeof window !== 'undefined'){
        const {scrollY} = window
        console.log(scrollY)
        // Projects
        if(scrollY >= projectsRefs.current.scrollHeight){
          projectContainer.forEach((items) => {
            items.classList.remove('move-items-bottom')
          })
        }
        if(scrollY >= introductionRefs.current.scrollHeight){
          introductionName.classList.remove('move-items-top')
          introductionDescription.classList.remove('move-items-left')
          introductionSwiper.classList.remove('move-items-right')
        }
      }
    }

    window.addEventListener('scroll', handleScroll, true)
    return () => {
      window.addEventListener('scroll', handleScroll, true)
    }
  })

  // useEffect(() => {
  //   if(projectsRefs.current.scrollHeight){
  //     console.log('yes it is')
  //   }else{
  //     console.log('no')
  //   }
  // }, [])

  return (
    <>
      <Head>
        <title>PortFolio</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      
      <div className={`${mode === 'light' ? 'bg-white text-dark' : 'bg-dark text-white'} main-content d-flex flex-column justify-content-between min-vh-100`}>
        <header>
          <div id='navbar' className='w-100 bg-info p-2'>
            <div className='navbar-container container h-100 fs-5 d-flex flex-row justify-content-between align-items-center'>
              <div className=''>
                {mode === 'light' ?
                <button onClick={handleMode} className='btn btn-outline-light border-0 rounded-circle'>
                  <MdOutlineDarkMode />
                </button> :
                <button onClick={handleMode} className='btn btn-outline-dark border-0 rounded-circle'>
                  <MdOutlineLightMode />
                </button>
                }
              </div>
              <div className='d-flex flex-column flex-sm-row flex-wrap justify-content-end align-items-center gap-3'>
                <Link className={`${mode === 'light' ? 'text-dark' : 'text-white'} hover-effect d-flex flex-row justify-content-center align-items-center gap-1 fw-bold`} href="#">
                  <AiFillGithub />
                  <span className=''>GitHub</span>
                </Link>
                <Link className={`${mode === 'light' ? 'text-dark' : 'text-white'} hover-effect d-flex flex-row justify-content-center align-items-center gap-1 fw-bold`} href="#">
                  <AiFillLinkedin />
                  <span className=''>LinkedIn</span>
                </Link>
                <span onClick={() => {
                  footerRefs.current.scrollIntoView({behavior: 'smooth'})
                }} className={`${mode === 'light' ? 'text-dark' : 'text-white'} hover-effect d-flex flex-row justify-content-center align-items-center gap-1 fw-bold`}>Contact Me?</span>
              </div>
            </div>
          </div>
        </header>

        <main className='container-fluid my-5'>
          <div className='main-container d-flex flex-column justify-content-between align-items-center gap-5'>
            {/* Introduction */}
            <div ref={introductionRefs} className='introduction-container' id='introduction'>
              <div className={`${mode === 'light' ? 'bg-dark' : 'bg-white'} introduction-top-bollets`}></div>
              <div className={`${mode === 'light' ? 'bg-dark' : 'bg-white'} introduction-bottom-bollets`}></div>

              <div className='container px-5 overflow-hidden d-flex flex-column flex-md-row justify-content-between align-items-center gap-4'>
                <div className='w-75 text-start d-flex flex-column justify-content-center align-items-start gap-3'>
                  <h3 className='introduction-name move-items-top p-0 m-0 fw-bold'>User Name</h3>
                  <p style={{fontSize: '15px'}} className='introduction-description move-items-left p-0 m-0 fw-light lh-lg font-monospace'>Lorem ipsum dolor sit amet consectetur adipisicing elit. Dolore maiores nulla quasi repudiandae veritatis distinctio pariatur tempora corporis quod est rem provident minus reprehenderit, excepturi mollitia dignissimos suscipit magnam, corrupti odio voluptatum delectus optio, dolorum quis. Quae blanditiis nesciunt neque.</p> 
                </div>

                <Swiper
                effect={'cards'}
                grabCursor={true}
                modules={[EffectCards]}
                style={{height: '300px', width: '220px'}} 
                className='introduction-swiper move-items-right shadow-lg'>
                  {
                    introductionData && introductionData.map((items, index) => (
                      <SwiperSlide key={index} className={`bg-${items.color || 'info'} p-3 d-flex flex-column justify-content-center align-items-start gap-1`}>
                        <h4 className='fw-bold'>{items?.name}</h4>
                        {loaded ?
                        <p style={{fontSize: '12px'}}>{items?.description}</p>
                        :
                        <Placeholder className='w-75' as="p" animation="wave">
                          <Placeholder xs={12} />
                          <Placeholder xs={10} />
                          <Placeholder xs={8} />
                        </Placeholder>
                        }
                      </SwiperSlide>
                    ))
                  }
                </Swiper>
              </div>
            </div>

            {/* Projects */}
            <div ref={projectsRefs} className='projects-container overflow-hidden container d-flex flex-column justify-content-center align-items-center gap-3' id='projects'>
              <div onClick={() => {
                projectsRefs.current.scrollIntoView({behavior: 'smooth'})
              }} className={`${mode === 'light' ? 'border-black text-black' : 'border-white text-white'} d-flex flex-column justify-content-center align-items-center gap-1 border-bottom py-2 px-3 w-auto`}>
                <span>Check My Projects</span>
                <FiArrowDown className='projects-arrow fs-5' />
              </div>
              <div className='d-flex flex-row flex-wrap justify-content-center align-items-center gap-3'>
                {
                  projectData && projectData.map(items => (
                    <Projects key={items.name} projectInfo={items} />
                  ))
                }
              </div>
            </div>

          </div>
        </main>

        <footer>
          <div ref={footerRefs} id='footer' className='w-100 p-1 bg-black text-white'>
            <div className='footer-container container d-flex flex-row justify-content-center align-items-center gap-3'>
              <p className='fs-5 p-0 m-0 fw-bold'>Contact:</p>
              <div className='d-flex flex-row flex-wrap justify-content-center align-items-center gap-3'>
                <div style={{fontSize: '12px'}} className='d-flex flex-row justify-content-center align-items-center gap-1'>
                  <FaDiscord />
                  <span className=''>Viper#0003</span>
                </div>
                <div style={{fontSize: '12px'}} className='d-flex flex-row justify-content-center align-items-center gap-1'>
                  <AiOutlineWhatsApp />
                  <span className=''>0123456789</span>
                </div>
              </div>
            </div>
          </div>
        </footer>
      </div>
    </>
  )
}
